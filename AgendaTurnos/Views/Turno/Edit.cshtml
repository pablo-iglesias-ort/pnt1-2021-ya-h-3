@model AgendaTurnos.Models.Turno

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar Turno</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Fecha" />
            <input type="hidden" asp-for="FechaSolicitud" />
            <input type="hidden" asp-for="Activo" />
            <input type="hidden" asp-for="PacienteId" />
            <input type="hidden" asp-for="ProfesionalId" />


            @if (Model.Confirmado)
            {
                <div class="form-group">
                    <label asp-for="DescripcionCancelacion" class="control-label"></label>
                    <input asp-for="DescripcionCancelacion" class="form-control" />
                    <span asp-validation-for="DescripcionCancelacion" class="text-danger"></span>
                </div>
                <input type="hidden" name="accion" value="cancelacion" />
            }
            else
            {
                <div class="form-group">
                    <label asp-for="Confirmado" class="control-label"></label>
                    <input asp-for="Confirmado" class="form-control" />
                    <span asp-validation-for="Confirmado" class="text-danger"></span>
                </div>
                <input type="hidden" name="accion" value="confirmacion" />
            }
            <div class="form-group">
                <input type="submit" value="Aceptar" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver al Turno</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
